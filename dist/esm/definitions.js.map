{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface PolarSdkPlugin {\n  connectPolar(): Promise<{ value: boolean, message?: string }>;\n\n  streamHR(): Promise<{ value: boolean }>;\n\n  streamEcg(): Promise<{ value: boolean }>;\n\n  stopHR(): Promise<{ value: boolean }>;\n\n  stopEcg(): Promise<{ value: boolean }>;\n\n  disconnectPolar(): Promise<{ value: boolean }>;\n\n  addListener(\n    eventName: 'hrData',\n    data: any,\n  ): Promise<PluginListenerHandle>;\n\n  addListener(\n    eventName: 'ecgData',\n    data: any,\n  ): Promise<PluginListenerHandle>;\n\n  addListener(\n    eventName: 'disconnected',\n    data: any,\n  ): Promise<PluginListenerHandle>;\n\n  removeAllListeners(): Promise<void>;\n}\n"]}